name: Packer Build

on:
  pull_request:
    branches: [main]
    types: [closed]
jobs:
  packer:
    runs-on: ubuntu-latest
    name: Packer Build

    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checkout code
          uses: actions/checkout@v3
        # Install Java JDK version 17
        - name: Install Java 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: temurin
        # Install MySQL
        - name: Setup MySQL
          run: sudo systemctl start mysql.service
        # Create csye6225 directory
        - name: Create Logging Directory and log files
          run: sudo mkdir --parents /var/log/csye6225
        # Create errors.log file
        - name: Create errors.log
          run: sudo touch /var/log/csye6225/errors.log
        # Create info.log file
        - name: Create info.log
          run: sudo touch /var/log/csye6225/info.log
        - name: Create warn.log
          run: sudo touch /var/log/csye6225/warn.log
        - name: Create debug.log
          run: sudo touch /var/log/csye6225/debug.log
        # Grant write access for log files
        - name: Grant write access
          run: |
            sudo chmod ugo+wx /var/log/csye6225/errors.log
            sudo chmod ugo+wx /var/log/csye6225/info.log
            sudo chmod ugo+wx /var/log/csye6225/warn.log
            sudo chmod ugo+wx /var/log/csye6225/debug.log
        # Start spring boot and run integration tests
        - name: Run integration tests
          run: | 
            mvn spring-boot:run -Dspring.datasource.url=jdbc:mysql://localhost:3306/clouddb?createDatabaseIfNotExist=true -Dspring.datasource.username=${{secrets.MYSQL_USERNAME}} -Dspring.datasource.password=${{secrets.MYSQL_PASSWORD}} -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver -Dspring.jpa.hibernate.ddl-auto=update -Dspring.datasource.hikari.connection-timeout=20000 &
            sleep 60
            mvn test
        # Build Spring boot project and remove old artifacts
        - name: Build project
          run: mvn clean package -DskipTests
        # Provide Gcloud service user creds
        - id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: ${{ secrets.GCLOUD_SERVICE_USER_JSON }}
        # Setup Gcloud
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v2
        # Check if Gcloud installed successfully
        - name: Use gcloud CLI
          run: gcloud info
        # Setup Packer
        - name: Setup Packer
          uses: hashicorp/setup-packer@main
        # Initialise Packer
        - name: Packer init
          run: packer init ./main.pkr.hcl
        # Format packer files
        - name: Packer format
          run: packer fmt -check ./main.pkr.hcl
        # Validate Packer Files
        - name: Packer validate
          run: packer validate ./main.pkr.hcl
        # Build image with packer
        - name: Packer build
          run: packer build ./main.pkr.hcl